{"ast":null,"code":"// src/api.js\nconst API_URL = \"http://localhost:5001/api\";\nexport const fetchResources = async () => {\n  const response = await fetch(`${API_URL}/resources`);\n  return response.json();\n};\nexport const fetchQueue = async () => {\n  const response = await fetch(`${API_URL}/queue`);\n  return response.json();\n};\nexport const registerPatient = async patientData => {\n  const response = await fetch(`${API_URL}/patients`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(patientData)\n  });\n  return response.json();\n};\nexport const completePatient = async firestoreId => {\n  const response = await fetch(`${API_URL}/patients/${firestoreId}`, {\n    method: \"DELETE\"\n  });\n  return response.json();\n};\nexport const resetSystem = async () => {\n  const response = await fetch(`${API_URL}/reset`, {\n    method: \"POST\"\n  });\n  return response.json();\n};\nexport const fetchOccupancyForecast = async () => {\n  const response = await fetch(`${API_URL}/forecast/occupancy`);\n  return response.json();\n};\nexport const fetchBedsForecast = async () => {\n  const response = await fetch(`${API_URL}/forecast/beds`);\n  return response.json();\n};","map":{"version":3,"names":["API_URL","fetchResources","response","fetch","json","fetchQueue","registerPatient","patientData","method","headers","body","JSON","stringify","completePatient","firestoreId","resetSystem","fetchOccupancyForecast","fetchBedsForecast"],"sources":["/Users/bluemishu/Downloads/Project_solvit2/frontend/src/api.js"],"sourcesContent":["// src/api.js\nconst API_URL = \"http://localhost:5001/api\";\n\nexport const fetchResources = async () => {\n  const response = await fetch(`${API_URL}/resources`);\n  return response.json();\n};\n\nexport const fetchQueue = async () => {\n  const response = await fetch(`${API_URL}/queue`);\n  return response.json();\n};\n\nexport const registerPatient = async (patientData) => {\n  const response = await fetch(`${API_URL}/patients`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(patientData),\n  });\n  return response.json();\n};\n\nexport const completePatient = async (firestoreId) => {\n  const response = await fetch(`${API_URL}/patients/${firestoreId}`, {\n    method: \"DELETE\",\n  });\n  return response.json();\n};\n\nexport const resetSystem = async () => {\n  const response = await fetch(`${API_URL}/reset`, {\n    method: \"POST\",\n  });\n  return response.json();\n};\n\nexport const fetchOccupancyForecast = async () => {\n  const response = await fetch(`${API_URL}/forecast/occupancy`);\n  return response.json();\n};\n\nexport const fetchBedsForecast = async () => {\n  const response = await fetch(`${API_URL}/forecast/beds`);\n  return response.json();\n};\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,YAAY,CAAC;EACpD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,QAAQ,CAAC;EAChD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAOC,WAAW,IAAK;EACpD,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,EAAE;IAClDQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;EAClC,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMS,eAAe,GAAG,MAAOC,WAAW,IAAK;EACpD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,aAAac,WAAW,EAAE,EAAE;IACjEN,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,QAAQ,EAAE;IAC/CQ,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMY,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EAChD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,qBAAqB,CAAC;EAC7D,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,gBAAgB,CAAC;EACxD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}