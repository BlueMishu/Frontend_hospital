{"ast":null,"code":"var _jsxFileName = \"/Users/bluemishu/Downloads/Project_solvit2/frontend/src/components/ForecastCharts.jsx\",\n  _s = $RefreshSig$();\n// src/components/ForecastCharts.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { fetchOccupancyForecast, fetchBedsForecast } from \"/Users/bluemishu/Downloads/Project_solvit2/frontend/src/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastCharts = () => {\n  _s();\n  const [occupancyData, setOccupancyData] = useState(null);\n  const [bedsData, setBedsData] = useState(null);\n  useEffect(() => {\n    // Fetch ARIMA occupancy forecast (assumes endpoint returns an object of date: value)\n    fetchOccupancyForecast().then(data => {\n      const labels = Object.keys(data);\n      const values = Object.values(data);\n      setOccupancyData({\n        labels: labels,\n        datasets: [{\n          label: \"Bed Occupancy Forecast (7 Days)\",\n          data: values,\n          fill: false\n          // Additional styling can be added here if needed\n        }]\n      });\n    });\n\n    // Fetch XGBoost predicted beds forecast (assumes endpoint returns an array of objects)\n    fetchBedsForecast().then(data => {\n      const labels = data.map(item => item.date);\n      const values = data.map(item => item.predicted_beds);\n      setBedsData({\n        labels: labels,\n        datasets: [{\n          label: \"Predicted Beds Forecast (30 Days)\",\n          data: values,\n          fill: false\n          // Additional styling can be added here if needed\n        }]\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forecast Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), occupancyData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bed Occupancy Forecast (7 Days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: occupancyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), bedsData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Predicted Beds Forecast (Next 30 Days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: bedsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastCharts, \"38fu/rscUagg01LOjkMM1XyXM7k=\");\n_c = ForecastCharts;\nexport default ForecastCharts;\nvar _c;\n$RefreshReg$(_c, \"ForecastCharts\");","map":{"version":3,"names":["React","useState","useEffect","Line","fetchOccupancyForecast","fetchBedsForecast","jsxDEV","_jsxDEV","ForecastCharts","_s","occupancyData","setOccupancyData","bedsData","setBedsData","then","data","labels","Object","keys","values","datasets","label","fill","map","item","date","predicted_beds","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bluemishu/Downloads/Project_solvit2/frontend/src/components/ForecastCharts.jsx"],"sourcesContent":["// src/components/ForecastCharts.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { fetchOccupancyForecast, fetchBedsForecast } from \"/Users/bluemishu/Downloads/Project_solvit2/frontend/src/api\";\n\nconst ForecastCharts = () => {\n  const [occupancyData, setOccupancyData] = useState(null);\n  const [bedsData, setBedsData] = useState(null);\n\n  useEffect(() => {\n    // Fetch ARIMA occupancy forecast (assumes endpoint returns an object of date: value)\n    fetchOccupancyForecast().then((data) => {\n      const labels = Object.keys(data);\n      const values = Object.values(data);\n      setOccupancyData({\n        labels: labels,\n        datasets: [\n          {\n            label: \"Bed Occupancy Forecast (7 Days)\",\n            data: values,\n            fill: false,\n            // Additional styling can be added here if needed\n          },\n        ],\n      });\n    });\n\n    // Fetch XGBoost predicted beds forecast (assumes endpoint returns an array of objects)\n    fetchBedsForecast().then((data) => {\n      const labels = data.map((item) => item.date);\n      const values = data.map((item) => item.predicted_beds);\n      setBedsData({\n        labels: labels,\n        datasets: [\n          {\n            label: \"Predicted Beds Forecast (30 Days)\",\n            data: values,\n            fill: false,\n            // Additional styling can be added here if needed\n          },\n        ],\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>Forecast Charts</h2>\n\n      {occupancyData && (\n        <div>\n          <h3>Bed Occupancy Forecast (7 Days)</h3>\n          <Line data={occupancyData} />\n        </div>\n      )}\n      \n      {bedsData && (\n        <div>\n          <h3>Predicted Beds Forecast (Next 30 Days)</h3>\n          <Line data={bedsData} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ForecastCharts;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,sBAAsB,EAAEC,iBAAiB,QAAQ,6DAA6D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExH,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAE,sBAAsB,CAAC,CAAC,CAACU,IAAI,CAAEC,IAAI,IAAK;MACtC,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC;MAChC,MAAMI,MAAM,GAAGF,MAAM,CAACE,MAAM,CAACJ,IAAI,CAAC;MAClCJ,gBAAgB,CAAC;QACfK,MAAM,EAAEA,MAAM;QACdI,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,iCAAiC;UACxCN,IAAI,EAAEI,MAAM;UACZG,IAAI,EAAE;UACN;QACF,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAjB,iBAAiB,CAAC,CAAC,CAACS,IAAI,CAAEC,IAAI,IAAK;MACjC,MAAMC,MAAM,GAAGD,IAAI,CAACQ,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;MAC5C,MAAMN,MAAM,GAAGJ,IAAI,CAACQ,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,cAAc,CAAC;MACtDb,WAAW,CAAC;QACVG,MAAM,EAAEA,MAAM;QACdI,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,mCAAmC;UAC1CN,IAAI,EAAEI,MAAM;UACZG,IAAI,EAAE;UACN;QACF,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvBrB,aAAa,iBACZH,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCxB,OAAA,CAACJ,IAAI;QAACY,IAAI,EAAEL;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACN,EAEAnB,QAAQ,iBACPL,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CxB,OAAA,CAACJ,IAAI;QAACY,IAAI,EAAEH;MAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3DID,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AA6DpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}