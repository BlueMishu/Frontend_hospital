{"ast":null,"code":"var _jsxFileName = \"/Users/bluemishu/Downloads/Project_solvit2 copy/frontend/src/App.js\";\n// src/App.js\nimport React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport PatientForm from \"./components/PatientForm\";\nimport PatientQueue from \"./components/PatientQueue\";\nimport ForecastCharts from \"./components/ForecastCharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // You might consider lifting state up to refresh your components after updates.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart Hospital Resource Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientForm, {\n      onUpdate: () => {\n        // This callback can be used to refresh data in other components after registration\n        window.location.reload(); // or use a state management solution\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientQueue, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForecastCharts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Dashboard","PatientForm","PatientQueue","ForecastCharts","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/bluemishu/Downloads/Project_solvit2 copy/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport PatientForm from \"./components/PatientForm\";\nimport PatientQueue from \"./components/PatientQueue\";\nimport ForecastCharts from \"./components/ForecastCharts\";\n\nfunction App() {\n  // You might consider lifting state up to refresh your components after updates.\n  return (\n    <div className=\"App\">\n      <h1>Smart Hospital Resource Management Dashboard</h1>\n      \n      <Dashboard />\n      \n      <PatientForm onUpdate={() => {\n          // This callback can be used to refresh data in other components after registration\n          window.location.reload(); // or use a state management solution\n      }} />\n      \n      <PatientQueue />\n      \n      <ForecastCharts />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EACb;EACA,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBH,OAAA;MAAAG,QAAA,EAAI;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErDP,OAAA,CAACL,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEbP,OAAA,CAACJ,WAAW;MAACY,QAAQ,EAAEA,CAAA,KAAM;QACzB;QACAC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC9B;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAELP,OAAA,CAACH,YAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEhBP,OAAA,CAACF,cAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACK,EAAA,GAlBQX,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}