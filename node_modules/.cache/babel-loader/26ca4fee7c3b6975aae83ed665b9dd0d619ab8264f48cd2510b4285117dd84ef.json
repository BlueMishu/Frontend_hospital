{"ast":null,"code":"var _jsxFileName = \"/Users/bluemishu/Downloads/Project_solvit2 copy 3/frontend/src/components/ForecastCharts.jsx\",\n  _s = $RefreshSig$();\n// src/components/ForecastCharts.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { fetchOccupancyForecast, fetchBedsForecast } from \"../api\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst ForecastCharts = () => {\n  _s();\n  const [forecastData, setForecastData] = useState({\n    occupancy: null,\n    beds: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadForecasts = async () => {\n      try {\n        const [occupancy, beds] = await Promise.all([fetchOccupancyForecast(), fetchBedsForecast()]);\n        setForecastData({\n          occupancy: {\n            labels: Object.keys(occupancy),\n            values: Object.values(occupancy)\n          },\n          beds: {\n            labels: beds.map(item => item.date),\n            values: beds.map(item => item.predicted_beds)\n          }\n        });\n      } catch (error) {\n        console.error(\"Forecast load error:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadForecasts();\n  }, []);\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: '7-Day Occupancy Forecast'\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Beds'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-center\",\n    children: \"Loading forecasts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"AI Forecasts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Bed Occupancy (Next 7 Days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: forecastData.occupancy.labels,\n            datasets: [{\n              label: 'Occupancy Rate',\n              data: forecastData.occupancy.values,\n              borderColor: 'rgb(79, 70, 229)',\n              tension: 0.3\n            }]\n          },\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Bed Demand Forecast (Next 30 Days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: forecastData.beds.labels,\n            datasets: [{\n              label: 'Predicted Beds Needed',\n              data: forecastData.beds.values,\n              borderColor: 'rgb(14, 165, 233)',\n              tension: 0.3\n            }]\n          },\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastCharts, \"n1dD7UBrtUZ1bvqKdZ1YbiuHho0=\");\n_c = ForecastCharts;\nexport default ForecastCharts;\nvar _c;\n$RefreshReg$(_c, \"ForecastCharts\");","map":{"version":3,"names":["React","useState","useEffect","Line","fetchOccupancyForecast","fetchBedsForecast","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ForecastCharts","_s","forecastData","setForecastData","occupancy","beds","isLoading","setIsLoading","loadForecasts","Promise","all","labels","Object","keys","values","map","item","date","predicted_beds","error","console","chartOptions","responsive","plugins","legend","position","title","display","text","scales","x","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","datasets","label","borderColor","tension","options","_c","$RefreshReg$"],"sources":["/Users/bluemishu/Downloads/Project_solvit2 copy 3/frontend/src/components/ForecastCharts.jsx"],"sourcesContent":["// src/components/ForecastCharts.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { fetchOccupancyForecast, fetchBedsForecast } from \"../api\";\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  PointElement, \n  LineElement, \n  Title, \n  Tooltip, \n  Legend \n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ForecastCharts = () => {\n  const [forecastData, setForecastData] = useState({\n    occupancy: null,\n    beds: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadForecasts = async () => {\n      try {\n        const [occupancy, beds] = await Promise.all([\n          fetchOccupancyForecast(),\n          fetchBedsForecast()\n        ]);\n        \n        setForecastData({\n          occupancy: {\n            labels: Object.keys(occupancy),\n            values: Object.values(occupancy)\n          },\n          beds: {\n            labels: beds.map(item => item.date),\n            values: beds.map(item => item.predicted_beds)\n          }\n        });\n      } catch (error) {\n        console.error(\"Forecast load error:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadForecasts();\n  }, []);\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: { position: 'top' },\n      title: { display: true, text: '7-Day Occupancy Forecast' }\n    },\n    scales: {\n      x: { display: true, title: { display: true, text: 'Date' } },\n      y: { display: true, title: { display: true, text: 'Beds' }, beginAtZero: true }\n    }\n  };\n\n  if (isLoading) return <div className=\"p-6 text-center\">Loading forecasts...</div>;\n\n  return (\n    <div className=\"p-6 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-bold mb-4\">AI Forecasts</h2>\n      \n      <div className=\"space-y-6\">\n        <div>\n          <h3 className=\"text-lg font-semibold mb-2\">Bed Occupancy (Next 7 Days)</h3>\n          <Line\n            data={{\n              labels: forecastData.occupancy.labels,\n              datasets: [{\n                label: 'Occupancy Rate',\n                data: forecastData.occupancy.values,\n                borderColor: 'rgb(79, 70, 229)',\n                tension: 0.3\n              }]\n            }}\n            options={chartOptions}\n          />\n        </div>\n\n        <div>\n          <h3 className=\"text-lg font-semibold mb-2\">Bed Demand Forecast (Next 30 Days)</h3>\n          <Line\n            data={{\n              labels: forecastData.beds.labels,\n              datasets: [{\n                label: 'Predicted Beds Needed',\n                data: forecastData.beds.values,\n                borderColor: 'rgb(14, 165, 233)',\n                tension: 0.3\n              }]\n            }}\n            options={chartOptions}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForecastCharts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}