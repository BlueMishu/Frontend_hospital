{"ast":null,"code":"var _jsxFileName = \"/Users/bluemishu/Downloads/Project_solvit2 copy 2/frontend/src/components/PatientQueue.jsx\";\n// src/components/PatientQueue.jsx\nimport React from \"react\";\nimport { completePatient } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientQueue = ({\n  queue,\n  onComplete\n}) => {\n  const urgencyColors = {\n    High: \"red\",\n    Medium: \"orange\",\n    Low: \"green\"\n  };\n  const handleComplete = async patientId => {\n    if (window.confirm(\"Mark this patient's treatment as completed?\")) {\n      try {\n        await completePatient(patientId);\n        onComplete();\n      } catch (error) {\n        alert(\"Failed to complete patient. Check console for details.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Treatment Queue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), queue.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-center py-4\",\n      children: \"No patients in queue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: queue.map((patient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-4 bg-gray-50 rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 mr-2\",\n            children: [\"#\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: patient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ml-2 px-2 py-1 text-xs font-semibold rounded-full bg-${urgencyColors[patient.urgency]}-100 text-${urgencyColors[patient.urgency]}-800`,\n            children: patient.urgency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleComplete(patient.firestore_id),\n          className: \"px-3 py-1 text-sm bg-green-100 text-green-800 rounded-full hover:bg-green-200\",\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, patient.firestore_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = PatientQueue;\nexport default PatientQueue;\nvar _c;\n$RefreshReg$(_c, \"PatientQueue\");","map":{"version":3,"names":["React","completePatient","jsxDEV","_jsxDEV","PatientQueue","queue","onComplete","urgencyColors","High","Medium","Low","handleComplete","patientId","window","confirm","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","patient","index","name","urgency","onClick","firestore_id","_c","$RefreshReg$"],"sources":["/Users/bluemishu/Downloads/Project_solvit2 copy 2/frontend/src/components/PatientQueue.jsx"],"sourcesContent":["// src/components/PatientQueue.jsx\nimport React from \"react\";\nimport { completePatient } from \"../api\";\n\nconst PatientQueue = ({ queue, onComplete }) => {\n  const urgencyColors = {\n    High: \"red\",\n    Medium: \"orange\",\n    Low: \"green\"\n  };\n\n  const handleComplete = async (patientId) => {\n    if (window.confirm(\"Mark this patient's treatment as completed?\")) {\n      try {\n        await completePatient(patientId);\n        onComplete();\n      } catch (error) {\n        alert(\"Failed to complete patient. Check console for details.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-bold mb-4\">Treatment Queue</h2>\n      \n      {queue.length === 0 ? (\n        <p className=\"text-gray-500 text-center py-4\">No patients in queue</p>\n      ) : (\n        <div className=\"space-y-3\">\n          {queue.map((patient, index) => (\n            <div \n              key={patient.firestore_id} \n              className=\"flex items-center justify-between p-4 bg-gray-50 rounded-md\"\n            >\n              <div>\n                <span className=\"text-gray-500 mr-2\">#{index + 1}</span>\n                <span className=\"font-medium\">{patient.name}</span>\n                <span className={`ml-2 px-2 py-1 text-xs font-semibold rounded-full bg-${urgencyColors[patient.urgency]}-100 text-${urgencyColors[patient.urgency]}-800`}>\n                  {patient.urgency}\n                </span>\n              </div>\n              \n              <button\n                onClick={() => handleComplete(patient.firestore_id)}\n                className=\"px-3 py-1 text-sm bg-green-100 text-green-800 rounded-full hover:bg-green-200\"\n              >\n                Complete\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PatientQueue;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EAC9C,MAAMC,aAAa,GAAG;IACpBC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,QAAQ;IAChBC,GAAG,EAAE;EACP,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOC,SAAS,IAAK;IAC1C,IAAIC,MAAM,CAACC,OAAO,CAAC,6CAA6C,CAAC,EAAE;MACjE,IAAI;QACF,MAAMb,eAAe,CAACW,SAAS,CAAC;QAChCN,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,KAAK,CAAC,wDAAwD,CAAC;MACjE;IACF;EACF,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDf,OAAA;MAAIc,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE1DjB,KAAK,CAACkB,MAAM,KAAK,CAAC,gBACjBpB,OAAA;MAAGc,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtEnB,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBb,KAAK,CAACmB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACxBvB,OAAA;QAEEc,SAAS,EAAC,6DAA6D;QAAAC,QAAA,gBAEvEf,OAAA;UAAAe,QAAA,gBACEf,OAAA;YAAMc,SAAS,EAAC,oBAAoB;YAAAC,QAAA,GAAC,GAAC,EAACQ,KAAK,GAAG,CAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxDnB,OAAA;YAAMc,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEO,OAAO,CAACE;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnDnB,OAAA;YAAMc,SAAS,EAAE,wDAAwDV,aAAa,CAACkB,OAAO,CAACG,OAAO,CAAC,aAAarB,aAAa,CAACkB,OAAO,CAACG,OAAO,CAAC,MAAO;YAAAV,QAAA,EACtJO,OAAO,CAACG;UAAO;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENnB,OAAA;UACE0B,OAAO,EAAEA,CAAA,KAAMlB,cAAc,CAACc,OAAO,CAACK,YAAY,CAAE;UACpDb,SAAS,EAAC,+EAA+E;UAAAC,QAAA,EAC1F;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAhBJG,OAAO,CAACK,YAAY;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBtB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACS,EAAA,GAnDI3B,YAAY;AAqDlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}